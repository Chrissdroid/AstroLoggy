---
import Blog from '$/layouts/Blog.astro'
import { type Page } from '&/page';
import { type CollectionEntry, getCollection } from 'astro:content';

import json5 from 'json5'

export interface Props {
	translations: {
		[key: string]: any,
		page: Page
	}
	post: CollectionEntry<"blog">
}

export const getStaticPaths = async () => {
	const posts = await getCollection('blog');
	const sortedPosts = posts.filter(post => !post.data.draft)

	const getSlugInfo = (post: CollectionEntry<"blog">) => {
		const [lang, slug]: string[] = post.slug.split('/')

		return {
			lang,
			slug,
		}
	}

	return sortedPosts.map(async post => {
		const {slug, lang: postLang} = getSlugInfo(post)

		return {
			params: {
				lang: postLang,
				slug: slug
			},
			props: {
				translations: json5.parse(await Bun.file(`./src/i18n/blog/${postLang}.json5`).text()),
				post
			}
		}
	})
}
const { translations, post } = Astro.props
const { lang } = Astro.params as { [key: string]: string }
const { Content } = await post.render();

---

<Blog {translations} Post={post} {lang} theme={post.data.theme as "astro" | "loggy" | "default" | undefined}>
	<Content />
</Blog>