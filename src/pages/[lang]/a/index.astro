---
import Layout from '$/layouts/PageLayout.astro'
import HeaderAnchor from '$/components/HeaderAnchor.astro'

import { Picture } from 'astro-imagetools/components'

import { Icon } from 'astro-icon'
import { Markdown } from 'astro/components'
import { createI18n } from '$/scripts/i18n'

export const getStaticPaths = createI18n('a/index')
const { translations, langs } = Astro.props
const { lang } = Astro.params as { [key: string]: string }

---

<Layout {translations} {langs} {lang} theme="astro">
	<section id="about-me">
		<header>
			<Picture src="https://picsum.photos/256" aspect={1/1} width={128} height={128} alt="Une photo de moi" loading="lazy" />
			<Markdown content={translations.headings.h1} />
		</header>
		<section>
			<h2 id="things-i-do">
				{translations.headings['things-i-do']}
				<HeaderAnchor lang={lang} id="things-i-do" />
			</h2>
			<ul role="list">
				{translations['things-i-do'].map((thing: string) => (
					<li><b>{thing}</b></li>
				))}
			</ul>
		</section>
		<section>
			<h2 id="things-im-on">
				{translations.headings['things-im-on']}
				<HeaderAnchor lang={lang} id="things-im-on" />
			</h2>
			<ul role="list">
				<li>
					<a href="">
						@astroalex_404
					</a>
				</li>
				<li>
					<a href="">
						ΛstroΛlex#7538
					</a>
				</li>
				<li>
					<a href="https://github.com/Chrissdroid">
						Astroalex (Chrissdroid)
					</a>
				</li>
			</ul>
		</section>
		<section>
			<h2 id="things-i-use">
				{translations.headings['things-i-use']}
				<HeaderAnchor lang={lang} id="things-i-use" />
			</h2>
			<ul role="list">
				{translations['things-i-use'].map((thing: string) => (
					<li><b>{thing}</b></li>
				))}
			</ul>
		</section>
		<section>
			<h2 id="things-i-created">
				{translations.headings['things-i-created']}
				<HeaderAnchor lang={lang} id="things-i-created" />
			</h2>
			<ul role="list">
				{translations['things-i-created'].map((project: any) => (
					<li>
						<article>
							<div class="content">
								<h3>
									{project.title}
									<HeaderAnchor lang={lang} id={"i-created-" + project.slug} />
								</h3>
								<Markdown content={project.description} />
								<ul role="list">
									{project.links.map((link: any) => (
										<li><a href={link.url}>{link.title}</a></li>
									))}
								</ul>
							</div>

							<aside>
								<Picture src={project.img.src} alt={project.img.alt} loading="lazy" />
							</aside>
						</article>
					</li>
				))}
			</ul>
		</section>
		<section>
			<h2 id="things-i-like">
				{translations.headings['things-i-like']}
				<HeaderAnchor lang={lang} id="things-i-like" />
			</h2>
			<ul role="list">
				{translations['things-i-like'].map((project: any) => (
					<li>
						<article>
							<div class="content">
								<h3>
									{project.title}
									<HeaderAnchor lang={lang} id={"i-like-" + project.slug} />
								</h3>
								<Markdown content={project.description} />
								<ul role="list">
									{project.links.map((link: any) => (
										<li><a href={link.url}>{link.title}</a></li>
									))}
								</ul>
							</div>

							<aside>
								<Picture src={project.img.src} alt={project.img.alt} object-fit="cover" loading="lazy" />
							</aside>
						</article>
					</li>
				))}
			</ul>
		</section>
	</section>
</Layout>

<style lang="scss">

#about-me {
	display: flex;
	flex-direction: column;
	max-width: 100vw;
	overflow: hidden;
	padding-block: 3rem;
	gap: 2rem;

	header {
		display: flex;
		flex-direction: row;
		justify-content: center;
		flex-wrap: wrap;
		gap: 1rem;

		:global(picture) {
			border-radius: .5em;
			border: 2px solid var(--glass-border);
			box-shadow: 0 4px 10px var(--glass-shadow);
			background: var(--glass-bg);
			aspect-ratio: 1/1;
			width: auto;
			height: 100% !important;
		}

		h1 {
			flex: 0 0 auto;
			width: clamp(12em, 75%, 40em);
			overflow: hidden;
			text-overflow: ellipsis;

			strong {
				font-weight: 900;
				font-size: clamp(1.05em, 5vw, 1.75em);
				letter-spacing: .05em;
				white-space: nowrap;
			}

			:global(small) {
				font-size: clamp(.75em, .75em, 1em);
				font-weight: 300;
			}
		}
	}

	section {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: flex-start;
		flex-wrap: wrap;
		gap: 1rem;
		padding-inline: clamp(.5em, 7.5vw, 5em);

		> ul {
			flex: 1 0 100%;
			display: flex;
			flex-direction: row;
			justify-content: center;
			list-style: none;
			gap: 1rem 2rem;
			flex-wrap: wrap;
			padding: .5em;
		}

		#things-i-do + ul {
			li:before {
				content: '✓ ';
				color: var(--active-300)
			}
		}

		#things-i-like + ul {
			flex-direction: row-reverse;

			article {
				flex-direction: row-reverse;

				aside {
					border-left: none !important;
					border-right: 2px solid var(--glass-border);

					> * {
						object-position: right !important;
					}
				}
			}
		}

		#things-i-created + ul,
		#things-i-like + ul {
			max-width: 100%;
			flex-wrap: nowrap;
			overflow: auto;
			padding: 1em .5em;
			justify-content: flex-start;
			border-radius: .5rem;
			background-image: linear-gradient(to right, var(--body-bg), var(--body-bg)), linear-gradient(to right, var(--body-bg), var(--body-bg)), linear-gradient(to right, hsl(0 0% 0% / .5), hsl(0 0% 0% / 0)), linear-gradient(to left, hsl(0 0% 0% / .5), hsl(0 0% 0% / 0));
			background-position: left center, right center, left center, right center;
			background-repeat: no-repeat;
			background-attachment: local, local, scroll, scroll;
			background-size: 20px 100%, 20px 100%, 10px 100%, 10px 100%;

			> li {
				flex: 0 0 clamp(26em, 85%, 35em);
				justify-content: flex-start;

				article {
					display: flex;
					justify-content: space-between;
					border: 2px solid var(--glass-border);
					box-shadow: 0 4px 10px var(--glass-shadow);
					background-color: var(--body-accent);
					border-radius: 1em;
					overflow: hidden;

					.content {
						flex: 1 0 40%;
						display: flex;
						flex-direction: column;
						padding: .5em 1em;
						gap: .5rem;

						p {
							overflow: auto;
							max-height: 10em;
						}

						ul {
							margin-top: auto;
							display: flex;
							list-style: none;
							justify-content: center;
							flex-wrap: wrap;
							gap: .25rem 1.5rem;
							font-size: 115%;
						}
					}

					aside {
						border-left: 2px solid var(--glass-border);
						display: flex;
						align-items: center;
						width: 100%;

						> * {
							height: 100%;
							object-fit: cover;
							object-position: left;
						}
					}
				}
			}
		}
	}
}

</style>